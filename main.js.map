{"version":3,"sources":["./src/app/project/project.component.ts","./src/app/project/project.component.html","./src/app/services/api-github.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/component-toolbar/component-toolbar.component.ts","./src/app/component-toolbar/component-toolbar.component.html","./src/app/app.module.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/app/projects/projects.component.html","./src/app/projects/projects.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>project works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiGithubService {\n  private readonly API = 'https://api.github.com/users/Miguel-Coruj/repos'\n\n  constructor(private http: HttpClient) { }\n\n  get() {\n    return this.http.get<any>(this.API)\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"description\">\n    <img class=\"load\" src=\"https://github.com/miguel-coruj.png\" alt=\"\">\n    <h3>\n      Sou um programador full stack,\n      <br>\n      No momento estou fazendo um bot para discord,\n      <br>\n      o <a target=\"_blank\" rel=\"noreferrer\" href=\"https://bipbup.herokuapp.com/\">BipBup</a>\n    </h3>\n  </div>\n\n<div class=\"social-media\">\n    <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/Miguel-Coruj\">\n        <img src=\"../../assets/icons/github.svg\" alt=\"github\">\n    </a>\n    <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.linkedin.com/in/miguel-coruj\">\n        <img src=\"../../assets/icons/linkedin.svg\" alt=\"linkedin\">\n    </a>\n    <a target=\"_blank\" rel=\"noreferrer\" href=\"https://twitter.com/miguelbraido\">\n        <img src=\"../../assets/icons/twitter.svg\" alt=\"twitter\">\n    </a>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MySite';\n}\n","<app-component-toolbar></app-component-toolbar>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-component-toolbar',\n  templateUrl: './component-toolbar.component.html',\n  styleUrls: ['../../assets/css/toolbar.css']\n})\nexport class ComponentToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"toolbar\">\n  <nav class=\"toolbar_navigation\">\n        <div class=\"toolbar_navigation-itens\">\n          <ul>\n              <li>\n                  <a routerLink=\"home\">Home</a>\n              </li>\n              <li>\n                  <a routerLink=\"projects\">Projetos</a>\n              </li>\n          </ul>\n        </div>\n  </nav>\n</header>  ","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ProjectComponent } from './project/project.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ComponentToolbarComponent } from './component-toolbar/component-toolbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ProjectsComponent,\n    ProjectComponent,\n    PageNotFoundComponent,\n    ComponentToolbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonModule,\n    HttpClientModule,\n    MatIconModule,\n    BrowserAnimationsModule\n  ],\n  exports: [\n    MatIconModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"not-found\">404</h2>\n\n<h4 class=\"not-found\">Esta página não existe</h4>\n\n<p class=\"not-found\">Volte para a <a class=\"not-found\" routerLink=\"/home\">Home</a></p>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ProjectComponent } from './project/project.component';\nimport { ProjectsComponent } from './projects/projects.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', component: HomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'projects', component: ProjectsComponent },\n  { path: 'project/:id', component: ProjectComponent },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"projects\">\n    <div class=\"container\" *ngFor=\"let repo of projects\">\n        <a  target=\"_blank\" rel=\"noreferrer\" href=\"{{repo.html_url}}\" >\n            <h2>{{ repo.name }}</h2>\n            <p *ngIf=\"repo.description\">{{ repo.description }}</p>\n            <div>\n                <span class=\"button\">\n                    <mat-icon>star_border</mat-icon>\n                    {{ repo.stargazers_count > 0 ? repo.stargazers_count : '' }}\n                </span>\n                <span class=\"button\">\n                    <mat-icon>visibility</mat-icon>\n                    {{ repo.watchers_count > 0 ? repo.watchers_count : '' }}\n                </span>\n                <span class=\"button\">\n                    <mat-icon>call_split</mat-icon>\n                    {{ repo.forks > 0 ? repo.forks : '' }}\n                </span>\n            </div>\n        </a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiGithubService } from '../services/api-github.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n  public projects: any\n  \n  constructor(private service: ApiGithubService) { }\n\n  ngOnInit() {\n    this.service.get()\n    .subscribe(response => this.projects = response)\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}